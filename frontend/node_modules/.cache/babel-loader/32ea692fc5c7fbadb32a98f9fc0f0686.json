{"ast":null,"code":"var _jsxFileName = \"/home/andy/javascript-test/react-flask-test/frontend/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [scores, setScores] = useState([]);\n\n  const getScores = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/scores/${id}`);\n      const jsonData = await response.json();\n      setScores(jsonData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"WPM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: scores.map(score => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"EMYLs6SHyy4qVAJQidqgFvx5wII=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Profile","id","scores","setScores","getScores","response","fetch","jsonData","json","err","console","error","map","score","user_id"],"sources":["/home/andy/javascript-test/react-flask-test/frontend/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams();\r\n\r\n  const [scores, setScores] = useState([]);\r\n\r\n  const getScores = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/scores/${id}`);\r\n      const jsonData = await response.json();\r\n\r\n      setScores(jsonData);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getScores();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <h2>Past Scores</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User ID</th>\r\n            <th>WPM</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {scores.map((score) => (\r\n            <tr>\r\n              <td>{score.user_id}</td>\r\n              <td>{score.score}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAASF,SAAS,EAAxB;EAEA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMM,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BL,EAAG,EAApC,CAA5B;MACA,MAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;MAEAL,SAAS,CAACI,QAAD,CAAT;IACD,CALD,CAKE,OAAOE,GAAP,EAAY;MACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;IACD;EACF,CATD;;EAWAZ,SAAS,CAAC,MAAM;IACdO,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAA,UACGF,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACV;UAAA,wBACE;YAAA,UAAKA,KAAK,CAACC;UAAX;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAKD,KAAK,CAACA;UAAX;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA1CD;;GAAMb,O;UACWD,S;;;KADXC,O;AA4CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}